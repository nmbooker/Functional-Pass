Functional-Pass

Call a function on compatible values, but pass through incompatible
values unchanged.

An example is accessing hashref values.  If the hashref is undef,
normally doing $undefined_hashref->{akey} would cause your code to die.

You can catch that by doing this:

 use Functional::Pass qw(pass_undef);

 my $value = pass_undef { $_->{akey} } $my_hashref;

If $my_hashref is undef, then $value will be set to undef,
otherwise it will be set to $my_hashref->{akey}.

You could chain calls together (note pundef is an alias for pass_undef):

 use Functional::Pass qw(pundef);

 my $v = pundef { $_->{nested_key} } pundef { $_->{akey} } $hashref;

That way, if $hashref is undef, or $hashref->{akey}
is undef, you'll just get undef as a result.  Sometimes that's all the
information you need.



INSTALLATION

To install this module, run the following commands:

	perl Makefile.PL
	make
	make test
	make install

SUPPORT AND DOCUMENTATION

After installing, you can find documentation for this module with the
perldoc command.

    perldoc Functional::Pass

LICENSE AND COPYRIGHT

Copyright (C) 2013 Nick Booker

This program is distributed under the MIT (X11) License:
L<http://www.opensource.org/licenses/mit-license.php>

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

